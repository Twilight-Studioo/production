name: code-check-build.yml
on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'src/Assets/Scripts/**'
      - '**/*.cs'
  push:
    paths:
      - 'src/Assets/Scripts/**'
      - '**/*.cs'
    branches:
      - main
      - develop
      - 'release/*'
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: src/Library
          key: Library-lint-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-lint-

      - uses: game-ci/unity-builder@v4
        with:
          projectPath: src
          unityVersion: auto
          buildMethod: Packages.Rider.Editor.RiderScriptEditor.SyncSolution
          targetPlatform: StandaloneWindows64

  test:
    runs-on: ubuntu-latest
#    needs: build  # このジョブはビルドが成功した場合のみ実行される
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_V2022X_LICENSE }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: src/Library
          key: Library-lint-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-lint-
      - uses: game-ci/unity-test-runner@v4
        id: tests
        with:
          projectPath: src
          unityVersion: auto
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: All
      - uses: actions/upload-artifact@v4
        name: Upload Test artifacts
        if: always()
        with:
          name: test-artifacts
          path: ${{ steps.tests.outputs.artifactsPath }}
  convert-to-markdown:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Download Test Artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path: artifacts  # ダウンロードするパス

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
  
      - name: Install Ruby Dependencies
        run: |
          gem install bundler
          bundle install
        working-directory: scripts
  
      - name: Convert XML to Markdown
        run: |
          ruby scripts/test_result_convert_md.rb artifacts
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && hashFiles('CodeCoverage/**/Summary.md') != ''
        with:
          recreate: true
          path: Result.md
