name: unity_build_on_devops.yml

on:
  issue_comment:
    types: [created]

jobs:
  trigger-build:
    runs-on: ubuntu-latest
    if: >
      github.event.issue.pull_request != null &&
      startsWith(github.event.comment.body, '/build')
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install -y curl)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${GITHUB_TOKEN}" | gh auth login --with-token

      - name: Parse build command
        id: parse
        run: |
          comment="${{ github.event.comment.body }}"
          echo "Comment: $comment"
          if [[ "$comment" =~ ^/build[[:space:]]*([a-fA-F0-9]{7,40})?$ ]]; then
            commit="${BASH_REMATCH[1]}"
            if [ -z "$commit" ]; then
              # PRの最新コミットSHAを取得
              commit=$(gh pr view ${{ github.event.issue.number }} --json headRefOid -q .headRefOid)
              echo "No commit specified. Using latest commit: $commit"
            else
              echo "Using specified commit: $commit"
            fi
            echo "commit=$commit" >> $GITHUB_OUTPUT
          else
            echo "No valid build command found."
            exit 1
          fi

      - name: Trigger Unity Cloud Build
        env:
          AUTHORIZATION_HEADER: ${{ secrets.AUTHORIZATION_HEADER }}
          UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
          BUILD_TARGET_ID: ${{ secrets.BUILD_TARGET_ID }}
          ORG_ID: ${{ secrets.UNITY_ORG_ID }}
        run: |
          commit_sha=${{ steps.parse.outputs.commit }}
          echo "Triggering build for commit: $commit_sha"

          # jq がインストールされていることを確認
          sudo apt-get install -y jq

          # ペイロードの準備
          payload=$(jq -n \
            --arg commit "$commit_sha" \
            --arg platform "standalonewindows64" \
            --arg machineTypeLabel "win_premium_v1" \
            '{
              clean: false,
              delay: 0,
              commit: $commit,
              branch: "",
              headless: false,
              label: "",
              platform: $platform,
              operatingSystemSelected: "",
              operatingSystemVersion: "",
              buildTargetGroupIds: [],
              groupBuildId: "",
              machineTypeLabel: $machineTypeLabel,
              architecture: ""
            }')

          # Unity Cloud Build API を介してビルドをトリガー
          response=$(curl -s -w "%{http_code}" -o response.json -X POST "https://build-api.cloud.unity3d.com/api/v1/orgs/${ORG_ID}/projects/${UNITY_PROJECT_ID}/buildtargets/${BUILD_TARGET_ID}/builds" \
            -H "${AUTHORIZATION_HEADER}" \
            -H "Content-Type: application/json" \
            -d "$payload")

          if [[ "$response" =~ ^2 ]]; then
            echo "Build triggered successfully."
            # レスポンスからビルドIDを抽出
            build_id=$(jq -r '.id' response.json)
            echo "build_id=$build_id" >> $GITHUB_OUTPUT
          else
            echo "Failed to trigger build. HTTP status code: $response"
            cat response.json
            exit 1
          fi

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ✅ ビルドをトリガーしました。コミット: `${{ steps.parse.outputs.commit }}`
            ビルドID: `${{ steps.trigger-build.outputs.build_id }}`